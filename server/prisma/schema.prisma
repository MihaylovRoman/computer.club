// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  phone    String   @unique
  password String
  balance  Decimal  @default(0)
  booked   Booked[]
  role     Role     @default(USER)
}

model Booked {
  id           Int            @id @default(autoincrement())
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  hall         Hall           @relation(fields: [hallId], references: [id])
  hallId       Int
  total        Decimal
  hours        Int
  status       StatusBooked   @default(PENDING)
  dateStart    DateTime       @default(now())
  additionally Additionally[]
  seat         Seat[]
}

model Hall {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  price    Decimal
  quantity Int
  Booked   Booked[]
  image    String   @default("")
  Seat     Seat[]
}

model Seat {
  id     Int      @id @default(autoincrement())
  hall   Hall     @relation(fields: [hallId], references: [id])
  hallId Int
  status Status   @default(FREE)
  Booked Booked[]
}

model Additionally {
  id     Int      @id @default(autoincrement())
  name   String
  price  Decimal
  Booked Booked[]
}

enum Status {
  OCCUPIED
  FREE
}

enum StatusBooked {
  PROCESS
  PENDING
  CLOSE
}

enum Role {
  USER
  ADMIN
}
